/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_dhi_DIOJNI */

#ifndef _Included_java_dhi_DIOJNI
#define _Included_java_dhi_DIOJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     java_dhi_DIOJNI
 * Method:    initializeDIOPort
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_java_dhi_DIOJNI_initializeDIOPort
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    checkDIOChannel
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_dhi_DIOJNI_checkDIOChannel
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    freeDIOPort
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_freeDIOPort
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDIOSimDevice
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDIOSimDevice
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDIO
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDIO
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDIODirection
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDIODirection
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    getDIO
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_dhi_DIOJNI_getDIO
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    getDIODirection
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_dhi_DIOJNI_getDIODirection
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    pulse
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_pulse
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    isPulsing
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_java_dhi_DIOJNI_isPulsing
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    isAnyPulsing
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_dhi_DIOJNI_isAnyPulsing
  (JNIEnv *, jclass);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    getLoopTiming
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_java_dhi_DIOJNI_getLoopTiming
  (JNIEnv *, jclass);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    allocateDigitalPWM
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_dhi_DIOJNI_allocateDigitalPWM
  (JNIEnv *, jclass);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    freeDigitalPWM
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_freeDigitalPWM
  (JNIEnv *, jclass, jint);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDigitalPWMRate
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDigitalPWMRate
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDigitalPWMDutyCycle
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDigitalPWMDutyCycle
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     java_dhi_DIOJNI
 * Method:    setDigitalPWMOutputChannel
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_java_dhi_DIOJNI_setDigitalPWMOutputChannel
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
